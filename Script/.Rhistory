library(pavo)
library(dplyr)
library(tidyr)
# Reflectance from your samples
Reflect<-read.csv("../Data/SampleReflectance.csv") %>%
pavo::as.rspec(.) %>%  # transform to rspec.
pavo::procspec(.,fixneg = "zero") # set negatives to 0 (artifacts)
# Standard Solar Irradiance from 280 to 4000 nm
# ASTM G173-03 Reference Spectra Derived from SMARTS v. 2.9.2 (AM1.5)
# Global tilt  W*m-2*nm-1
# from https://www.pveducation.org/pvcdrom/appendices/standard-solar-spectra
theorySunALL<-read.csv("../Data/OfficialSun.csv") %>%
pavo::as.rspec(., whichwl = "wl")
# Limit irradiance to the appropriate wavelength range for your experiment
Sun<-theorySunALL %>%
dplyr::filter(wl>=400 & wl<=1700)
# Solar Simulator and Filters
filters<-read.csv("../Data/SolarSimulatorAndFilters.csv") %>%
pavo::as.rspec(.) %>%
pavo::procspec(.,fixneg = "zero") %>%
dplyr::rename(Full.f = halfsun) %>%  # rename
dplyr::mutate(vis.f = Full.f*visfilterTransmittance/100) %>% # vis filter
dplyr::mutate(nir.f = Full.f*nirfilterTransmittance/100) %>% # nir filter
dplyr::select(-visfilterTransmittance) %>%
dplyr::select(-nirfilterTransmittance)
plot(Reflect[,c(1,2)], col="green", ylim=c(0,80)) # green beetle
lines(Reflect[,c(1,3)], col="orange") # Gold beetle
lines(Reflect[,c(1,4)], col="black") # Black beetle
plot(Sun, ylim=c(0,2.5)) # sun
lines(filters$wl,filters$halfsun, col="pink") #solar simulator
plot(filters[,c(1,2)]) # full irradiance of the solar simulator
lines (filters[,c(1,3)], col="blue") # visible
lines (filters[,c(1,4)], col="red") # nir
plot(Sun, ylim=c(0,2.5)) # sun
lines(filters$wl,filters$halfsun, col="pink") #solar simulator
lines(filters$wl,filters$halfsun, col="pink") #solar simulator
filters$halfsun
lines(filters$wl,filters$Full.f, col="pink") #solar simulator
plot(filters[,c(1,2)]) # full irradiance of the solar simulator
lines (filters[,c(1,3)], col="blue") # visible
lines (filters[,c(1,4)], col="red") # nir
OneSpp <- filters$Full.f * Reflect$GreenBeetle
OneSpp$wl <- filters$wl
filters$Full.f
Reflect$GreenBeetle
length(filters$Full.f)
length(Reflect$GreenBeetle)
OneSpp <- data.frame(Reflect$wl,Reflect$GreenBeetle, filters$Full.f )
head(OneSpp)
OneSppR <-
OneSpp %>%
mutate(GreenB_Product)
OneSppR <-
OneSpp %>%
mutate(GreenB_Product = Reflect.GreenBeetle * filters.Full.f)
OneSppR <-
OneSpp %>%
mutate(GreenB_Product = Reflect.GreenBeetle * filters.Full.f) %>%  #multiply
select(Reflect.wl,GreenB_Product) %>%
pavo::as.rspec()
# Find the area under the curve
AreaSample <- summary(OneSppR)$B1
AreaSample
# Find the area under the curve for the irrandiance
AreaLight <- summary(filters[,c(1,2)])
AreaLight
AreaSample/AreaLight
# Find the area under the curve for the sample
AreaSample <- summary(OneSppR)$B1 #in Pavo B1 is the AUC
# Find the area under the curve for the irrandiance
AreaLight <- summary(filters[,c(1,2)])$B1 #in Pavo B1 is the AUC
AreaSample/AreaLight
install.packages("ggplot2")
library(ggplot2)
plotS1C <- ggplot() +
geom_line(data=filters,
mapping = aes(x=wl, y=Full.f),
colour="#E6B200")+ # Add irradiance of the light source
geom_area(data=OneSppR,
mapping, aes(x=OneSpp$Reflect.wl, y=OneSpp$Reflect.GreenBeetle),
fill="#00A08A", alpha = 0.3) + # AUC for the product reflct * Irr
theme_bw()+ # a simple theme
xlab("Wavelength (nm)")+ # labels
ylab(expression("   Irradiance \n (W/m^2/nm)"))+ # labels
theme(axis.title.y = element_text(size=7),
axis.title.x = element_text(size=7),
axis.text.y = element_text(size=7),
axis.text.x = element_text(size=7)) + # controlling the axis
scale_x_continuous(breaks=seq(300,1700,200)) +
theme(plot.margin = unit(c(0, 0.4, 0, 0.4), "cm"))
plotS1C <- ggplot() +
geom_line(data=filters,
mapping = aes(x=wl, y=Full.f),
colour="#E6B200")+ # Add irradiance of the light source
geom_area(data=OneSppR,
mapping = aes(x=OneSpp$Reflect.wl, y=OneSpp$Reflect.GreenBeetle),
fill="#00A08A", alpha = 0.3) + # AUC for the product reflct * Irr
theme_bw()+ # a simple theme
xlab("Wavelength (nm)")+ # labels
ylab(expression("   Irradiance \n (W/m^2/nm)"))+ # labels
theme(axis.title.y = element_text(size=7),
axis.title.x = element_text(size=7),
axis.text.y = element_text(size=7),
axis.text.x = element_text(size=7)) + # controlling the axis
scale_x_continuous(breaks=seq(300,1700,200)) +
theme(plot.margin = unit(c(0, 0.4, 0, 0.4), "cm"))
plotS1C
plotS1C <- ggplot() +
geom_line(data=filters,
mapping = aes(x=wl, y=Full.f),
colour="#E6B200")+ # Add irradiance of the light source
geom_area(data=OneSppR,
mapping = aes(x=OneSpp$Reflect.wl,
y=OneSpp$Reflect.GreenBeetle/filters$Full.f),
fill="#00A08A", alpha = 0.3) + # AUC for the product reflct * Irr
theme_bw()+ # a simple theme
xlab("Wavelength (nm)")+ # labels
ylab(expression("   Irradiance \n (W/m^2/nm)"))+ # labels
theme(axis.title.y = element_text(size=7),
axis.title.x = element_text(size=7),
axis.text.y = element_text(size=7),
axis.text.x = element_text(size=7)) + # controlling the axis
scale_x_continuous(breaks=seq(300,1700,200)) +
theme(plot.margin = unit(c(0, 0.4, 0, 0.4), "cm"))
plotS1C
plotS1C <- ggplot() +
geom_line(data=filters,
mapping = aes(x=wl, y=Full.f),
colour="#E6B200")+ # Add irradiance of the light source
geom_area(data=OneSppR,
mapping = aes(x=OneSpp$Reflect.wl,
y=OneSpp$Reflect.GreenBeetle/100),
fill="#00A08A", alpha = 0.3) + # AUC for the product reflct * Irr
theme_bw()+ # a simple theme
xlab("Wavelength (nm)")+ # labels
ylab(expression("   Irradiance \n (W/m^2/nm)"))+ # labels
theme(axis.title.y = element_text(size=7),
axis.title.x = element_text(size=7),
axis.text.y = element_text(size=7),
axis.text.x = element_text(size=7)) + # controlling the axis
scale_x_continuous(breaks=seq(300,1700,200)) +
theme(plot.margin = unit(c(0, 0.4, 0, 0.4), "cm"))
plotS1C
plotS1C <- ggplot() +
geom_line(data=filters,
mapping = aes(x=wl, y=Full.f),
colour="#E6B200")+ # Add irradiance of the light source
geom_area(data=OneSppR,
mapping = aes(x=OneSppR$wl,
y=OneSppR$GreenB_Product),
fill="#00A08A", alpha = 0.3) + # AUC for the product reflct * Irr
theme_bw()+ # a simple theme
xlab("Wavelength (nm)")+ # labels
ylab(expression("   Irradiance \n (W/m^2/nm)"))+ # labels
theme(axis.title.y = element_text(size=7),
axis.title.x = element_text(size=7),
axis.text.y = element_text(size=7),
axis.text.x = element_text(size=7)) + # controlling the axis
scale_x_continuous(breaks=seq(300,1700,200)) +
theme(plot.margin = unit(c(0, 0.4, 0, 0.4), "cm"))
plotS1C
OneSppR$Filter <- filters$Full.f
plotS1C <- ggplot() +
geom_line(data=filters,
mapping = aes(x=wl, y=Full.f),
colour="#E6B200")+ # Add irradiance of the light source
geom_area(data=OneSppR,
mapping = aes(x=OneSppR$wl,
y=OneSppR$GreenB_Product/OneSppR$Filter),
fill="#00A08A", alpha = 0.3) + # AUC for the product reflct * Irr
theme_bw()+ # a simple theme
xlab("Wavelength (nm)")+ # labels
ylab(expression("   Irradiance \n (W/m^2/nm)"))+ # labels
theme(axis.title.y = element_text(size=7),
axis.title.x = element_text(size=7),
axis.text.y = element_text(size=7),
axis.text.x = element_text(size=7)) + # controlling the axis
scale_x_continuous(breaks=seq(300,1700,200)) +
theme(plot.margin = unit(c(0, 0.4, 0, 0.4), "cm"))
plotS1C
plotS1C <- ggplot() +
geom_line(data=filters,
mapping = aes(x=wl, y=Full.f),
colour="#E6B200")+ # Add irradiance of the light source
geom_area(data=OneSppR,
mapping = aes(x=OneSppR$wl,
y=OneSppR$GreenB_Product/100),
fill="#00A08A", alpha = 0.3) + # AUC for the product reflct * Irr
theme_bw()+ # a simple theme
xlab("Wavelength (nm)")+ # labels
ylab(expression("   Irradiance \n (W/m^2/nm)"))+ # labels
theme(axis.title.y = element_text(size=7),
axis.title.x = element_text(size=7),
axis.text.y = element_text(size=7),
axis.text.x = element_text(size=7)) + # controlling the axis
scale_x_continuous(breaks=seq(300,1700,200)) +
theme(plot.margin = unit(c(0, 0.4, 0, 0.4), "cm"))
plotS1C
plotS1C <- ggplot() +
geom_line(data=filters,
mapping = aes(x=wl, y=Full.f),
colour="#E6B200")+ # Add irradiance of the light source
geom_area(data=OneSppR,
mapping = aes(x=OneSppR$wl,
y=OneSppR$GreenB_Product/500),
fill="#00A08A", alpha = 0.3) + # AUC for the product reflct * Irr
theme_bw()+ # a simple theme
xlab("Wavelength (nm)")+ # labels
ylab(expression("   Irradiance \n (W/m^2/nm)"))+ # labels
theme(axis.title.y = element_text(size=7),
axis.title.x = element_text(size=7),
axis.text.y = element_text(size=7),
axis.text.x = element_text(size=7)) + # controlling the axis
scale_x_continuous(breaks=seq(300,1700,200)) +
theme(plot.margin = unit(c(0, 0.4, 0, 0.4), "cm"))
plotS1C
plotS1C <- ggplot() +
geom_line(data=filters,
mapping = aes(x=wl, y=Full.f),
colour="#E6B200")+ # Add irradiance of the light source
geom_area(data=OneSppR,
mapping = aes(x=OneSppR$wl,
y=OneSppR$GreenB_Product/50),
fill="#00A08A", alpha = 0.3) + # AUC for the product reflct * Irr
theme_bw()+ # a simple theme
xlab("Wavelength (nm)")+ # labels
ylab(expression("   Irradiance \n (W/m^2/nm)"))+ # labels
theme(axis.title.y = element_text(size=7),
axis.title.x = element_text(size=7),
axis.text.y = element_text(size=7),
axis.text.x = element_text(size=7)) + # controlling the axis
scale_x_continuous(breaks=seq(300,1700,200)) +
theme(plot.margin = unit(c(0, 0.4, 0, 0.4), "cm"))
plotS1C
plotS1C
plotS1C <- ggplot() +
geom_line(data=filters,
mapping = aes(x=wl, y=Full.f),
colour="#E6B200")+ # Add irradiance of the light source
geom_area(data=OneSppR,
mapping = aes(x=wl,
y=GreenB_Product/50),
fill="#00A08A", alpha = 0.3) + # AUC for the product reflct * Irr
theme_bw()+ # a simple theme
xlab("Wavelength (nm)")+ # labels
ylab(expression("   Irradiance \n (W/m^2/nm)"))+ # labels
theme(axis.title.y = element_text(size=7),
axis.title.x = element_text(size=7),
axis.text.y = element_text(size=7),
axis.text.x = element_text(size=7)) + # controlling the axis
scale_x_continuous(breaks=seq(300,1700,200)) +
theme(plot.margin = unit(c(0, 0.4, 0, 0.4), "cm"))
plotS1C
plotS1C <- ggplot() +
geom_line(data=filters,
mapping = aes(x=wl, y=Full.f),
colour="#E6B200")+ # Add irradiance of the light source
geom_area(data=OneSppR,
mapping = aes(x=wl,
y=GreenB_Product),
fill="#00A08A", alpha = 0.3) + # AUC for the product reflct * Irr
theme_bw()+ # a simple theme
xlab("Wavelength (nm)")+ # labels
ylab(expression("   Irradiance \n (W/m^2/nm)"))+ # labels
theme(axis.title.y = element_text(size=7),
axis.title.x = element_text(size=7),
axis.text.y = element_text(size=7),
axis.text.x = element_text(size=7)) + # controlling the axis
scale_x_continuous(breaks=seq(300,1700,200)) +
theme(plot.margin = unit(c(0, 0.4, 0, 0.4), "cm"))
plotS1C
OneSpp
plotS1C <- ggplot() +
geom_line(data=filters,
mapping = aes(x=wl, y=Full.f),
colour="#E6B200")+ # Add irradiance of the light source
geom_area(data=OneSppR,
mapping = aes(x=wl,
y=GreenB_Product/100),
fill="#00A08A", alpha = 0.3) + # AUC for the product reflct * Irr
theme_bw()+ # a simple theme
xlab("Wavelength (nm)")+ # labels
ylab(expression("   Irradiance \n (W/m^2/nm)"))+ # labels
theme(axis.title.y = element_text(size=7),
axis.title.x = element_text(size=7),
axis.text.y = element_text(size=7),
axis.text.x = element_text(size=7)) + # controlling the axis
scale_x_continuous(breaks=seq(300,1700,200)) +
theme(plot.margin = unit(c(0, 0.4, 0, 0.4), "cm"))
plotS1C
# Find the product and keep only that vector
OneSppR <-
OneSpp %>%
mutate(GreenB_Product = Reflect.GreenBeetle/100 * filters.Full.f) %>%  #multiply
select(Reflect.wl,GreenB_Product) %>% # Keep only the product and wl.
pavo::as.rspec()
# Find the product and keep only that vector
OneSppR <-
OneSpp %>%
mutate(GreenB_Product = Reflect.GreenBeetle/100 * filters.Full.f) %>%  #multiply
select(Reflect.wl,GreenB_Product) %>% # Keep only the product and wl.
pavo::as.rspec()
# Find the area under the curve for the sample
AreaSample <- summary(OneSppR)$B1 #in Pavo B1 is the AUC
# Find the area under the curve for the irrandiance
AreaLight <- summary(filters[,c(1,2)])$B1 #in Pavo B1 is the AUC
AreaSample/AreaLight
OneSppR$Filter <- filters$Full.f
plotS1C <- ggplot() +
geom_line(data=filters,
mapping = aes(x=wl, y=Full.f),
colour="#E6B200")+ # Add irradiance of the light source
geom_area(data=OneSppR,
mapping = aes(x=wl,
y=GreenB_Product),
fill="#00A08A", alpha = 0.3) + # AUC for the product reflct * Irr
theme_bw()+ # a simple theme
xlab("Wavelength (nm)")+ # labels
ylab(expression("   Irradiance \n (W/m^2/nm)"))+ # labels
theme(axis.title.y = element_text(size=7),
axis.title.x = element_text(size=7),
axis.text.y = element_text(size=7),
axis.text.x = element_text(size=7)) + # controlling the axis
scale_x_continuous(breaks=seq(300,1700,200)) +
theme(plot.margin = unit(c(0, 0.4, 0, 0.4), "cm"))
plotS1C
plot(Reflect[,c(1,2)], col="green", ylim=c(0,80)) # green beetle
lines(Reflect[,c(1,3)], col="orange") # Gold beetle
lines(Reflect[,c(1,4)], col="black") # Black beetle
OneSppR$Filter <- filters$Full.f
plotS1C <- ggplot() +
geom_line(data=filters,
mapping = aes(x=wl, y=Full.f),
colour="#E6B200")+ # Add irradiance of the light source
geom_area(data=OneSppR,
mapping = aes(x=wl,
y=GreenB_Product),
fill="#00A08A", alpha = 0.3) + # AUC for the product reflct * Irr
theme_bw()+ # a simple theme
xlab("Wavelength (nm)")+ # labels
ylab(expression("   Irradiance \n (W/m^2/nm)"))+ # labels
theme(axis.title.y = element_text(size=7),
axis.title.x = element_text(size=7),
axis.text.y = element_text(size=7),
axis.text.x = element_text(size=7)) + # controlling the axis
scale_x_continuous(breaks=seq(300,1700,200)) +
theme(plot.margin = unit(c(0, 0.4, 0, 0.4), "cm"))
plotS1C
plot(Reflect[,c(1,2)], col="green", ylim=c(0,80)) # green beetle
lines(Reflect[,c(1,3)], col="orange") # Gold beetle
lines(Reflect[,c(1,4)], col="black") # Black beetle
plot(Sun, ylim=c(0,2.5)) # sun
lines(filters$wl,filters$Full.f, col="pink") #solar simulator
OneSppR$Filter <- filters$Full.f
plotS1C <- ggplot() +
geom_line(data=filters,
mapping = aes(x=wl, y=Full.f),
colour="#E6B200")+ # Add irradiance of the light source
geom_area(data=OneSppR,
mapping = aes(x=wl,
y=GreenB_Product),
fill="#00A08A", alpha = 0.3) + # AUC for the product reflct * Irr
theme_bw()+ # a simple theme
xlab("Wavelength (nm)")+ # labels
ylab(expression("   Irradiance \n (W/m^2/nm)"))+ # labels
theme(axis.title.y = element_text(size=7),
axis.title.x = element_text(size=7),
axis.text.y = element_text(size=7),
axis.text.x = element_text(size=7)) + # controlling the axis
scale_x_continuous(breaks=seq(300,1700,200)) +
theme(plot.margin = unit(c(0, 0.4, 0, 0.4), "cm"))
plotS1C
